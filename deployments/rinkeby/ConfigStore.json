{
  "address": "0x680231Dc3f66D2B357d0d34b33384cE22f80e417",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseContractURI",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "SetBaseContractURI",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "SetBaseURI",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "SetSigner",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "baseContractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setBaseContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        }
      ],
      "name": "setSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "signer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcf602584febb5363b7ac7b5efc8302246f288168301e1e764a1baeb3d6b5408b",
  "receipt": {
    "to": null,
    "from": "0x33aaE4F4bA8019704137703Fe808F6B172D72D6B",
    "contractAddress": "0x680231Dc3f66D2B357d0d34b33384cE22f80e417",
    "transactionIndex": 10,
    "gasUsed": "632029",
    "logsBloom": "0x
    "blockHash": "0xa3279ced2572cb86ef38b80fce7b24534846316b50d7da432fc0b7ee46e0b4fe",
    "transactionHash": "0xcf602584febb5363b7ac7b5efc8302246f288168301e1e764a1baeb3d6b5408b",
    "logs": [
      {
        "transactionIndex": 10,
        "blockNumber": 10982942,
        "transactionHash": "0xcf602584febb5363b7ac7b5efc8302246f288168301e1e764a1baeb3d6b5408b",
        "address": "0x680231Dc3f66D2B357d0d34b33384cE22f80e417",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000033aae4f4ba8019704137703fe808f6b172d72d6b"
        ],
        "data": "0x",
        "logIndex": 21,
        "blockHash": "0xa3279ced2572cb86ef38b80fce7b24534846316b50d7da432fc0b7ee46e0b4fe"
      }
    ],
    "blockNumber": 10982942,
    "cumulativeGasUsed": "7463158",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "https://api.neighborhood.money/rinkeby/metadata/membershipPass/",
    "https://api.neighborhood.money/rinkeby/metadata/contract/",
    "0xc45D314D16957f8C72aB4cA27A619bd0042A00c6"
  ],
  "numDeployments": 1,
  "solcInputHash": "4e9316abea9744a68b7555d93f5656d5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_baseContractURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"SetBaseContractURI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"SetBaseURI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"SetSigner\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"baseContractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setBaseContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"setSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Uris is used as base uri of membership pass\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setBaseContractURI(string)\":{\"params\":{\"_uri\":\"The new base contract uri\"}},\"setBaseURI(string)\":{\"params\":{\"_uri\":\"The new base uri\"}},\"setSigner(address)\":{\"params\":{\"_signer\":\"The new signer\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setBaseContractURI(string)\":{\"notice\":\"The owner can modify the base contract uri\"},\"setBaseURI(string)\":{\"notice\":\"The owner can modify the base uri\"},\"setSigner(address)\":{\"notice\":\"The owner can modify the signer\"}},\"notice\":\"Stores configuration globally\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ConfigStore.sol\":\"ConfigStore\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/ConfigStore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"./interfaces/IConfigStore.sol\\\";\\n\\n/**\\n  @notice\\n  Stores configuration globally\\n  @dev\\n  Uris is used as base uri of membership pass\\n*/\\ncontract ConfigStore is IConfigStore, Ownable {\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551  Public Stored Properties   \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n\\n    // The base uri of metadata for membershippass nft\\n    string public override baseURI;\\n\\n    // Contract level data, for intergrating the NFT to OpenSea\\n    string public override baseContractURI;\\n\\n    // Signer address, sign proposal and royalty fee distribution merkle tree\\n    address public override signer;\\n\\n    /*\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n      \\u2551   External Transaction  \\u2551\\n      \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d*/\\n\\n    constructor(\\n        string memory _baseURI,\\n        string memory _baseContractURI,\\n        address _signer\\n    ) {\\n        baseURI = _baseURI;\\n        baseContractURI = _baseContractURI;\\n        signer = _signer;\\n    }\\n\\n    /**\\n        @notice\\n        The owner can modify the base uri\\n\\n        @param _uri The new base uri\\n     */\\n    function setBaseURI(string memory _uri) external override onlyOwner {\\n        baseURI = _uri;\\n\\n        emit SetBaseURI(_uri);\\n    }\\n\\n    /**\\n        @notice\\n        The owner can modify the base contract uri\\n        \\n        @param _uri The new base contract uri\\n     */\\n    function setBaseContractURI(string memory _uri) external override onlyOwner {\\n        baseContractURI = _uri;\\n\\n        emit SetBaseContractURI(_uri);\\n    }\\n\\n    /**\\n        @notice\\n        The owner can modify the signer\\n        \\n        @param _signer The new signer\\n     */\\n    function setSigner(address _signer) external override onlyOwner {\\n        signer = _signer;\\n\\n        emit SetSigner(_signer);\\n    }\\n}\\n\",\"keccak256\":\"0x8a1798f5c35045d0aeaf8ba7adf733257e8f409e352b99ae7a71bb0637b9e2df\",\"license\":\"MIT\"},\"contracts/interfaces/IConfigStore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\ninterface IConfigStore {\\n    event SetBaseURI(string uri);\\n\\n    event SetBaseContractURI(string uri);\\n\\n    event SetSigner(address signer);\\n\\n    function baseURI() external view returns (string memory);\\n\\n    function baseContractURI() external view returns (string memory);\\n\\n    function signer() external view returns (address);\\n\\n    function setBaseURI(string memory _uri) external;\\n\\n    function setBaseContractURI(string memory _uri) external;\\n\\n    function setSigner(address _signer) external;\\n}\\n\",\"keccak256\":\"0x79eb0298de1ae6151bdd2314c379637d6f49d320a33c18479eaa8ceb58702f5b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000a1738038062000a1783398101604081905262000034916200023d565b6200003f3362000094565b825162000054906001906020860190620000e4565b5081516200006a906002906020850190620000e4565b50600380546001600160a01b0319166001600160a01b039290921691909117905550620003199050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000f290620002c6565b90600052602060002090601f01602090048101928262000116576000855562000161565b82601f106200013157805160ff191683800117855562000161565b8280016001018555821562000161579182015b828111156200016157825182559160200191906001019062000144565b506200016f92915062000173565b5090565b5b808211156200016f576000815560010162000174565b600082601f8301126200019b578081fd5b81516001600160401b0380821115620001b857620001b862000303565b604051601f8301601f19908116603f01168101908282118183101715620001e357620001e362000303565b81604052838152602092508683858801011115620001ff578485fd5b8491505b8382101562000222578582018301518183018401529082019062000203565b838211156200023357848385830101525b9695505050505050565b60008060006060848603121562000252578283fd5b83516001600160401b038082111562000269578485fd5b62000277878388016200018a565b945060208601519150808211156200028d578384fd5b506200029c868287016200018a565b604086015190935090506001600160a01b0381168114620002bb578182fd5b809150509250925092565b600181811c90821680620002db57607f821691505b60208210811415620002fd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6106ee80620003296000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80636c19e783116100665780636c19e78314610105578063715018a61461011857806380f2152e146101205780638da5cb5b14610128578063f2fde38b1461013957600080fd5b80630cd3a53814610098578063238ac933146100ad57806355f804b3146100dd5780636c0360eb146100f0575b600080fd5b6100ab6100a6366004610535565b61014c565b005b6003546100c0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ab6100eb366004610535565b6101cd565b6100f861023a565b6040516100d491906105df565b6100ab610113366004610507565b6102c8565b6100ab610340565b6100f8610376565b6000546001600160a01b03166100c0565b6100ab610147366004610507565b610383565b6000546001600160a01b0316331461017f5760405162461bcd60e51b815260040161017690610632565b60405180910390fd5b805161019290600290602084019061046e565b507f6416060ba7e8eeada44f80919a02f6652950b024c607d4a44608919949c9d8e0816040516101c291906105df565b60405180910390a150565b6000546001600160a01b031633146101f75760405162461bcd60e51b815260040161017690610632565b805161020a90600190602084019061046e565b507f23c8c9488efebfd474e85a7956de6f39b17c7ab88502d42a623db2d8e382bbaa816040516101c291906105df565b6001805461024790610667565b80601f016020809104026020016040519081016040528092919081815260200182805461027390610667565b80156102c05780601f10610295576101008083540402835291602001916102c0565b820191906000526020600020905b8154815290600101906020018083116102a357829003601f168201915b505050505081565b6000546001600160a01b031633146102f25760405162461bcd60e51b815260040161017690610632565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527fbb10aee7ef5a307b8097c6a7f2892b909ff1736fd24a6a5260640c185f7153b6906020016101c2565b6000546001600160a01b0316331461036a5760405162461bcd60e51b815260040161017690610632565b610374600061041e565b565b6002805461024790610667565b6000546001600160a01b031633146103ad5760405162461bcd60e51b815260040161017690610632565b6001600160a01b0381166104125760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610176565b61041b8161041e565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805461047a90610667565b90600052602060002090601f01602090048101928261049c57600085556104e2565b82601f106104b557805160ff19168380011785556104e2565b828001600101855582156104e2579182015b828111156104e25782518255916020019190600101906104c7565b506104ee9291506104f2565b5090565b5b808211156104ee57600081556001016104f3565b600060208284031215610518578081fd5b81356001600160a01b038116811461052e578182fd5b9392505050565b600060208284031215610546578081fd5b813567ffffffffffffffff8082111561055d578283fd5b818401915084601f830112610570578283fd5b813581811115610582576105826106a2565b604051601f8201601f19908116603f011681019083821181831017156105aa576105aa6106a2565b816040528281528760208487010111156105c2578586fd5b826020860160208301379182016020019490945295945050505050565b6000602080835283518082850152825b8181101561060b578581018301518582016040015282016105ef565b8181111561061c5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061067b57607f821691505b6020821081141561069c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212202dace422a440a0f400bf19c2889930b771f1a57270140d0e9f56257c5abab3c264736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80636c19e783116100665780636c19e78314610105578063715018a61461011857806380f2152e146101205780638da5cb5b14610128578063f2fde38b1461013957600080fd5b80630cd3a53814610098578063238ac933146100ad57806355f804b3146100dd5780636c0360eb146100f0575b600080fd5b6100ab6100a6366004610535565b61014c565b005b6003546100c0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ab6100eb366004610535565b6101cd565b6100f861023a565b6040516100d491906105df565b6100ab610113366004610507565b6102c8565b6100ab610340565b6100f8610376565b6000546001600160a01b03166100c0565b6100ab610147366004610507565b610383565b6000546001600160a01b0316331461017f5760405162461bcd60e51b815260040161017690610632565b60405180910390fd5b805161019290600290602084019061046e565b507f6416060ba7e8eeada44f80919a02f6652950b024c607d4a44608919949c9d8e0816040516101c291906105df565b60405180910390a150565b6000546001600160a01b031633146101f75760405162461bcd60e51b815260040161017690610632565b805161020a90600190602084019061046e565b507f23c8c9488efebfd474e85a7956de6f39b17c7ab88502d42a623db2d8e382bbaa816040516101c291906105df565b6001805461024790610667565b80601f016020809104026020016040519081016040528092919081815260200182805461027390610667565b80156102c05780601f10610295576101008083540402835291602001916102c0565b820191906000526020600020905b8154815290600101906020018083116102a357829003601f168201915b505050505081565b6000546001600160a01b031633146102f25760405162461bcd60e51b815260040161017690610632565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527fbb10aee7ef5a307b8097c6a7f2892b909ff1736fd24a6a5260640c185f7153b6906020016101c2565b6000546001600160a01b0316331461036a5760405162461bcd60e51b815260040161017690610632565b610374600061041e565b565b6002805461024790610667565b6000546001600160a01b031633146103ad5760405162461bcd60e51b815260040161017690610632565b6001600160a01b0381166104125760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610176565b61041b8161041e565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805461047a90610667565b90600052602060002090601f01602090048101928261049c57600085556104e2565b82601f106104b557805160ff19168380011785556104e2565b828001600101855582156104e2579182015b828111156104e25782518255916020019190600101906104c7565b506104ee9291506104f2565b5090565b5b808211156104ee57600081556001016104f3565b600060208284031215610518578081fd5b81356001600160a01b038116811461052e578182fd5b9392505050565b600060208284031215610546578081fd5b813567ffffffffffffffff8082111561055d578283fd5b818401915084601f830112610570578283fd5b813581811115610582576105826106a2565b604051601f8201601f19908116603f011681019083821181831017156105aa576105aa6106a2565b816040528281528760208487010111156105c2578586fd5b826020860160208301379182016020019490945295945050505050565b6000602080835283518082850152825b8181101561060b578581018301518582016040015282016105ef565b8181111561061c5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061067b57607f821691505b6020821081141561069c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212202dace422a440a0f400bf19c2889930b771f1a57270140d0e9f56257c5abab3c264736f6c63430008040033",
  "devdoc": {
    "details": "Uris is used as base uri of membership pass",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setBaseContractURI(string)": {
        "params": {
          "_uri": "The new base contract uri"
        }
      },
      "setBaseURI(string)": {
        "params": {
          "_uri": "The new base uri"
        }
      },
      "setSigner(address)": {
        "params": {
          "_signer": "The new signer"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "setBaseContractURI(string)": {
        "notice": "The owner can modify the base contract uri"
      },
      "setBaseURI(string)": {
        "notice": "The owner can modify the base uri"
      },
      "setSigner(address)": {
        "notice": "The owner can modify the signer"
      }
    },
    "notice": "Stores configuration globally",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 915,
        "contract": "contracts/ConfigStore.sol:ConfigStore",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9396,
        "contract": "contracts/ConfigStore.sol:ConfigStore",
        "label": "baseURI",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 9399,
        "contract": "contracts/ConfigStore.sol:ConfigStore",
        "label": "baseContractURI",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 9402,
        "contract": "contracts/ConfigStore.sol:ConfigStore",
        "label": "signer",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}